SELECT
	inventory.mold,
	inventory.brand,
	disc.type
FROM
	inventory
	join
		disc on inventory.mold like disc.mold
	order by
		disc.type, inventory.brand

SELECT
	type,
	count(*)
FROM
	disc
group by
	type

# get count by disc type ##########################
SELECT
	disc.type,
	count(*)
FROM
	inventory
	join
		disc on inventory.mold like disc.mold
	group by
		disc.type

# get count for specific type:
SELECT
	disc.type,
	count(*)
FROM
	inventory
	join
		disc on inventory.mold like disc.mold
WHERE
	disc.type like 'putter'
##################################################

# get count by disc brand ########################
SELECT
	brand,
	count(*)
FROM
	inventory
group by
    brand
order by count(*) desc
##################################################

# get count by disc mold #########################
SELECT
	mold,
	count(*)
FROM
	inventory
	group by
		mold
	order by count(*) desc
##################################################

# get count by disc speed ########################
SELECT
	speed,
	count(*)
FROM
	inventory
	group by
		speed
	order by speed
##################################################

# get count by stability #########################
select
	turn + fade as stability,
	count(turn)
 from inventory
group by stability
order by stability desc

# get {putter} pop-up:
SELECT
	inventory.mold,
	inventory.speed,
	inventory.glide,
	inventory.turn,
	inventory.fade,
	(inventory.turn + inventory.fade) as stability
FROM
	inventory
JOIN
	disc
	on
	disc.mold like inventory.mold
WHERE
	disc.type like 'putter'
order by
	stability desc


	def get_disc_count_by_filter(_filter):
    print(f'filter: {_filter}')
    df = get_data_frame()
    if _filter == 'mold':
        pivot = df.pivot_table(index='mold', values="id", aggfunc="count")
        rows = pivot.to_dict()['id'].items()
    else:
        pivot = df.pivot_table(index=_filter, values="mold", aggfunc="count")
        rows = pivot.to_dict()['mold'].items()
    return rows